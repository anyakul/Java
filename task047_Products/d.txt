47. Реализуйте класс Товар, содержащий данные о товаре, и ТорговыйАвтомат, содержащий в себе методы initProducts (List <Product>) сохраняющий в себе список исходных продуктов и getProduct(String name)

Реализовать конструкторы, get/set методы, построить логику ТорговогоАвтомата на основе кода сделанного в задании 1.2

Сделать класс Товар абстрактным, создать нескольких наследников (к примеру: БутылкаВоды), сделать интерфейсом ТорговыйАвтомат и реализовать класс какого-то одного типа ТорговогоАвтомата (пример: ПродающийБутылкиВодыАвтомат

Переопределить метод toString для Товара, запустить программу, после этого переопределить для наследника этот метод. Как изменится поведение метода?

Создать перегруженный метод выдачи товара ТорговымАвтоматом, включив дополнительный входной параметр (пример: getProduct(String name), выдающий товар по имени; создать метод, возвращающий товар по имени и какому-либо параметру товара getProduct(String name, int volume)

Создать наследника реализованного класса ГорячийНапиток с дополнительным полем int температура.

Создать класс ГорячихНапитковАвтомат реализующий интерфейс ТорговыйАвтомат и реализовать перегруженный метод getProduct(int name, int volume, int temperature) выдающий продукт соответствующий имени, объему и температуре

В main проинициализировать несколько ГорячихНапитков и ГорячихНапитковАвтомат и воспроизвести логику заложенную в программе

Все вышеуказанное создать согласно принципам ООП, пройдённым на семинаре
